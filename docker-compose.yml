version: '3.6'

services:
    product.service:
        hostname: product.service
        image: product_service:latest
        container_name: product_service
        build:
            context: .
            dockerfile: ProductService/ProductService.API/Dockerfile
        ports:
            - 80
        environment:
            - ASPNETCORE_ENVIRONMENT=Development
        depends_on:
            - api.gateway
            - postgres.sql

    pricing.service:
        hostname: pricing.service
        image: pricing_service:latest
        container_name: pricing_service
        build:
            context: .
            dockerfile: PricingService/PricingService.API/Dockerfile
        ports:
            - 80
        environment:
            - ASPNETCORE_ENVIRONMENT=Development
        depends_on:
            - product.service

    policy.service:
        hostname: policy.service
        image: policy_service:latest
        container_name: policy_service
        build:
            context: .
            dockerfile: PolicyService/PolicyService.API/Dockerfile
        ports:
            - 80
        environment:
            - ASPNETCORE_ENVIRONMENT=Development
        depends_on:
            - rabbit.mq
            - api.gateway
            - postgres.sql

    policy.search.service:
        hostname: policy.search.service
        image: policy_search_service:latest
        container_name: policy_search_service
        build:
            context: .
            dockerfile: PolicySearchService/PolicySearchService.API/Dockerfile
        ports:
            - 80
        environment:
            - ASPNETCORE_ENVIRONMENT=Development
        depends_on:
            - rabbit.mq
            - api.gateway
            - elasticsearch

    payment.service:
        hostname: payment.service
        image: payment_service:latest
        container_name: payment_service
        build:
            context: .
            dockerfile: PaymentService/PaymentService.API/Dockerfile
        ports:
            - 80
        environment:
            - ASPNETCORE_ENVIRONMENT=Development
        depends_on:
            - rabbit.mq
            - api.gateway
            - postgres.sql

    authentication.service:
        image: authentication_service:latest
        container_name: authentication_service
        build:
            context: .
            dockerfile: AuthenticationService/AuthenticationService.IDP/Dockerfile
        ports:
            - 9998:80
        environment:
            - ASPNETCORE_ENVIRONMENT=Development

    api.gateway:
        image: api_gateway:latest
        container_name: api_gateway
        build:
            context: .
            dockerfile: ApiGateway/Portal.Gateway/Dockerfile
        ports:
            - 9999:80
        environment:
            - ASPNETCORE_ENVIRONMENT=Development
        depends_on:
            - consul
            - authentication.service

    consul:
        hostname: consul
        image: consul:latest
        container_name: consul
        command: consul agent -dev -log-level=warn -ui -client=0.0.0.0
        ports:
            - 8500

    rabbit.mq:
        hostname: rabbit.mq
        image: rabbitmq:3-management
        container_name: rabbit_mq
        environment:
            RABBIT_DEFAULT_USER: "guest"
            RABBIT_DEFAULT_PASS: "guest"
        ports:
            - 5672:5672
            - 15672:15672

    elasticsearch:
        hostname: elasticsearch
        image: docker.elastic.co/elasticsearch/elasticsearch:7.8.0
        container_name: elasticsearch
        environment:
          - cluster.name=docker-cluster
          - bootstrap.memory_lock=true
          - cluster.initial_master_nodes=elasticsearch
          - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
        ulimits:
          memlock:
            soft: -1
            hard: -1
        volumes:
          - elasticsearch_data:/usr/share/elasticsearch/data
        ports:
          - 9200

    postgres.sql:
        image: postgres:latest
        container_name: "postgres_db"
        ports:
            - 5432
        volumes:
            - db_volume:/var/lib/postressql/data
        environment:
            POSTGRES_USER: "db_handler"
            POSTGRES_PASSWORD: "user_poc_password"

    adminer:
        image: adminer:latest
        container_name: "database_panel"
        restart: always
        ports:
          - 11111:8080
        depends_on:
            - postgres.sql

volumes:
    db_volume:
    elasticsearch_data: